syntax = "proto3";

package inventory.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/Bladforceone/rocket/shared/pkg/proto/inventory/v1;inventoryv1";

service InventoryService {
  rpc GetPart(GetPartRequest) returns (GetPartResponse);
  rpc ListParts(ListPartsRequest) returns (ListPartsResponse);
}
// GetPartRequest запрос на получение детали по её UUID.
message GetPartRequest {
  string uuid = 1;
}

// GetPartResponse ответ с информацией о детали.
message GetPartResponse {
  Part part = 1;
}

// ListPartRequest запрос на получение списка деталей с возможностью фильтрации.
message ListPartsRequest {
  PartFilter filter = 1;
}

// ListPartResponse ответ с списком деталей, соответствующих фильтру.
message ListPartsResponse {
  repeated Part parts = 1;
}

// PartFilter фильтр для поиска деталей по различным критериям.
message PartFilter {
  repeated google.protobuf.StringValue uuids = 1;
  repeated google.protobuf.StringValue names = 2;
  repeated Category categories = 3;
  repeated google.protobuf.StringValue manufacturer_countries = 4;
  repeated google.protobuf.StringValue tags = 5;
}

// Part информация о деталях.
message Part {
  string uuid = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int64 stock_quantity = 5;
  Category category = 6;
  Dimensions dimensions = 7;
  Manufacturer manufacturer = 8;
  repeated string tags = 9;
  map<string, Value> metadata = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
}

// Category категория детали.
enum Category {
  CATEGORY_UNKNOWN_UNSPECIFIED = 0;
  CATEGORY_ENGINE = 1;
  CATEGORY_FUEL = 2;
  CATEGORY_PORTHOLE = 3;
  CATEGORY_WING = 4;
}

// Dimensions размеры и вес детали.
message Dimensions {
  double length = 1;
  double width = 2;
  double height = 3;
  double weight = 4;
}

// Manufacturer информация о производителе детали.
message Manufacturer {
  string name = 1;
  string country = 2;
  string website = 3;
}

// Value универсальный тип для хранения значений различных типов.
message Value {
  oneof kind {
    string string_value = 1;
    int64 int_value = 2;
    double double_value = 3;
    bool bool_value = 4;
  }
}